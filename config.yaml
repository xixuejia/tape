# Definition of nodes
# addr address for node
# tls_ca_cert tls cert
peer1: &peer1
  addr: localhost:7051
  org: org1
  tls_ca_cert: ./organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp/tlscacerts/tlsca.org1.example.com-cert.pem

peer2: &peer2
  addr: localhost:9051
  org: org2
  tls_ca_cert: ./organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/msp/tlscacerts/tlsca.org2.example.com-cert.pem

orderer1: &orderer1
  addr: localhost:7050
  org: org1
  tls_ca_cert: ./organizations/ordererOrganizations/example.com/msp/tlscacerts/tlsca.example.com-cert.pem

policyFile: ./andPolicy.rego

# Nodes to interact with
endorsers:
  - *peer1
  - *peer2

# Peer Nodes to interact with as Commit Peers as listening
committers: 
  - *peer1
  - *peer2
commitThreshold: 2

# orderer Nodes to interact with
orderer: *orderer1

# Invocation configs
channel: mychannel
chaincode: basic
# chain code args below, in a list of str
# we provides 3 kinds of randmon
# uuid
# randomString$length
# randomNumber$min_$max
args:
  - CreateAsset
  - uuid
  - randomString8
  - randomNumber0_50
  - randomString8
  - randomNumber0_50
# Tx submiter information
mspid: Org1MSP
private_key: ./organizations/peerOrganizations/org1.example.com/users/User1@org1.example.com/msp/keystore/priv_sk
sign_cert: ./organizations/peerOrganizations/org1.example.com/users/User1@org1.example.com/msp/signcerts/User1@org1.example.com-cert.pem
# network traffic control
num_of_conn: 10
client_per_conn: 10
